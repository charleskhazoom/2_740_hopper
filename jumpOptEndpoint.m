function output = jumpOptEndpoint(input)

% % Cost Function - max body height with minor torque minimization
% output.objective = -input.phase(2).finalstate(end,1) +...
%                    -input.phase(2).finalstate(end,2) +...
%                    input.phase(1).integral(1) +...
%                    -input.phase(1).integral(2)+...
%                    -input.phase(1).integral(3);

% % Cost Function - vertical and forward velocity with torque minimization
% output.objective = 0.1*input.phase(1).integral(1) +...
%                    -10*input.phase(1).integral(2)+...
%                    -10*input.phase(1).integral(3);

% Cost Function - maintain z position, minimize torque
output.objective = 0.0001*input.phase(1).integral(1) +...
                    input.phase(1).integral(2) +...
                    input.phase(1).integral(3)+...
                    10*input.phase(1).integral(4)+...
                    10*input.phase(1).integral(5);


% Continuity Constraints
tf = input.phase(1).finaltime;
xf = input.phase(1).finalstate;
t0 = input.phase(2).initialtime;
x0 = input.phase(2).initialstate;
output.eventgroup(1).event = [xf-x0, tf-t0];